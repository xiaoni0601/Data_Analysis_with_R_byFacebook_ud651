ggplot(aes(x=friend_count),data=pf) +geom_histogram()
#ggplot(aes(x=friend_count),data=pf) +geom_hi
```
getwd()
list.files()
pf=read.csv('pseudo_facebook.tsv',sep='\t')
names(pf)
#install.packages('ggplot2')
library(ggplot2)
#names(pf)
#for old version:
#qplot(x=dob_day,data=pf)+
scale_x_discrete(breaks=1:31)
#qplot(x=dob_day,data=pf)+
scale_x_continuous(breaks=1:31)
ggplot(aes(x=dob_day),data=pf)+
geom_histogram(binwidth=1)+
scale_x_continuous(breaks=1:31)+
facet_wrap(~dob_month,ncol=2)
#install.packages('ggplot2')
library(ggplot2)
#names(pf)
#for old version:
#qplot(x=dob_day,data=pf)+
scale_x_discrete(breaks=1:31)
#qplot(x=dob_day,data=pf)+
scale_x_continuous(breaks=1:31)
ggplot(aes(x=dob_day),data=pf)+
geom_histogram(binwidth=1)+
scale_x_continuous(breaks=1:31)+
facet_wrap(~dob_month,ncol=2)
ggplot(aes(x=friend_count),data=pf) +geom_histogram()
#ggplot(aes(x=friend_count),data=pf) +geom_hi
```
getwd()
list.files()
pf=read.csv('pseudo_facebook.tsv',sep='\t')
names(pf)
View(pf)
View(pf)
qplot(data=reddit, x=income.range )
#qplot(data=reddit, x=income.range )
qplot(data=reddit,x=income.range)
#qplot(data=reddit, x=income.range )
qplot(data =reddit, x=income.range)
install.packages(c("colorspace", "DT", "foreign", "lattice", "nlme", "nnet", "survival"))
ggplot(aes(x=friend_count),data=pf) +geom_histogram()
#install.packages('ggplot2')
library(ggplot2)
#names(pf)
#for old version:
#qplot(x=dob_day,data=pf)+
scale_x_discrete(breaks=1:31)
#qplot(x=dob_day,data=pf)+
scale_x_continuous(breaks=1:31)
ggplot(aes(x=dob_day),data=pf)+
geom_histogram(binwidth=1)+
scale_x_continuous(breaks=1:31)+
facet_wrap(~dob_month,ncol=2)
ggplot(aes(x=friend_count),data=pf) +geom_histogram()
```
ggplot(aes(x=friend_count),data=pf) +geom_histogram()+scale_x_continuous(limits=c(0,1000))
qplot(x=friend_count,data=pf)+scale_x_continuous(limits=c(0,1000))
qplot(x=friend_count,data=pf,binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
ggplot(aes(x=friend_count),data=pf)+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
#ggplot(aes(x=friend_count),data=pf)+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
#ggplot(aes(x=friend_count),data=pf)+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x = friend_count, data = pf) +
facet_grid(gender ~ .)
#ggplot(aes(x=friend_count),data=pf)+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=pf)+
facet_grid(gender ~ .)
#ggplot(aes(x=friend_count),data=pf)+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=pf)+
facet_grid(gender ~ .)
#ggplot(aes(x=friend_count),data=pf)+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=pf)+
facet_grid(gender ~ .)
#ggplot(aes(x=friend_count),data=pf)+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=pf)+
facet_grid(gender ~ .)
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
#ggplot(aes(x=friend_count),data=pf)+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=pf)+
facet_grid(gender ~ .)
ggplot(aes(x=friend_count),data=pf)+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
#qplot(x=friend_count,data=pf)+
#	facet_grid(gender ~ .)
ggplot(aes(x=friend_count),data=subset(pf, !is.na(geneder))+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
#qplot(x=friend_count,data=pf)+
#	facet_grid(gender ~ .)
library(ggplot2)
ggplot(aes(x=friend_count),data=subset(pf, !is.na(geneder)))+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
library(ggplot2)
ggplot(aes(x=friend_count),data=subset(pf, !is.na(gender)))+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
#qplot(x=friend_count,data=pf)+
#	facet_grid(gender ~ .)
library(ggplot2)
#ggplot(aes(x=friend_count),data=subset(pf, !is.na(gender)))+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=(pf, !is.na(gender))+
library(ggplot2)
#ggplot(aes(x=friend_count),data=subset(pf, !is.na(gender)))+
#	geom_histogram()+
#	scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
#	facet_wrap(~gender)
qplot(x=friend_count,data=sunset(pf, !is.na(gender))+
facet_grid(gender ~ .)
library(ggplot2)
ggplot(aes(x=friend_count),data=subset(pf, !is.na(gender)))+
geom_histogram()+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
table(pf$gender)
table(pf$gender)
by(pf$friend_count,pf$gender,summary)
242-165
96-74
96-74
qplot(x=tenure,data=pf,color=I('black'),fill=I('#099DD9'))
qplot(x=tenure,data=pf,binwidth=30,
color=I('black'),fill=I('#099DD9'))
ggplt(aes(x=tenure/365),data=pf)+
geom_histogram(binwidth = .25,color='black',fill='#F79420')
ggplot(aes(x=tenure/365),data=pf)+
geom_histogram(binwidth = .25,color='black',fill='#F79420')
ggplot(aes(x=tenure/365),data=pf)+
geom_histogram(binwidth = .25,color='black',fill='#F79420')+
scale_x_continuous(breaks=seq(1,7,1),limits=c(0,7))
ggplot(aes(x=tenure/365),data=pf, xlab='Number of years using Facebook',ylab='Number of users in sample')+
geom_histogram(binwidth = .25,color='black',fill='#F79420')+
scale_x_continuous(breaks=seq(1,7,1),limits=c(0,7))
ggplot(aes(x=tenure/365),data=pf)+
geom_histogram(binwidth = .25,color='black',fill='#F79420')+
scale_x_continuous(breaks=seq(1,7,1),limits=c(0,7))+
xlab('Number of years using Facebook'),ylab('Number of users in sample')
ggplot(aes(x=tenure/365),data=pf)+
geom_histogram(binwidth = .25,color='black',fill='#F79420')+
scale_x_continuous(breaks=seq(1,7,1),limits=c(0,7))+
xlab('Number of years using Facebook'),ylab('Number of users in sample'))
ggplot(aes(x=tenure/365),data=pf)+
geom_histogram(binwidth = .25,color='black',fill='#F79420')+
scale_x_continuous(breaks=seq(1,7,1),limits=c(0,7))+
xlab('Number of years using Facebook')+ylab('Number of users in sample')
ggplot(aes(x=age),data=pf)+geom_histogram(binwidth=1,fill='#5760AB')+
scale_x_continuous(breaks=seq(0,113,5))
#ggplot(aes(x=age),data=pf)+geom_histogram(binwidth=1,fill='#5760AB')+
#	scale_x_continuous(breaks=seq(0,113,5))
qqplot(x=age,data=pf,
color=O('black'),fill=I('#5760AB'))
#ggplot(aes(x=age),data=pf)+geom_histogram(binwidth=1,fill='#5760AB')+
#	scale_x_continuous(breaks=seq(0,113,5))
qplot(x=age,data=pf,
color=O('black'),fill=I('#5760AB'))
#ggplot(aes(x=age),data=pf)+geom_histogram(binwidth=1,fill='#5760AB')+
#	scale_x_continuous(breaks=seq(0,113,5))
qplot(x=age,data=pf,
color=I('black'),fill=I('#5760AB'))
summary(pf$age)
names(pf)
summary(userid)
summary(pf$userid)
summary(pf$dob_day)
qplot(x=friend_count,data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
qplot(x=friend_count,data=pf)
#summary(pf$friend_count)
#summary(log10(pf$friend_count))
#qplot(x=friend_count,data=pf)
summary(pf$friend_count)
#summary(log10(pf$friend_count))
#qplot(x=friend_count,data=pf)
#summary(pf$friend_count)
summary(log10(pf$friend_count))
#qplot(x=friend_count,data=pf)
#summary(pf$friend_count)
summary(log10(pf$friend_count)+1)
qplot(x=friend_count,data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count)+1)
qplot(x=friend_count,data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count)+1)
#qplot(x=friend_count,data=pf)
#summary(pf$friend_count)
summary(log10(pf$friend_count)+1)
#qplot(x=friend_count,data=pf)
#summary(pf$friend_count)
summary(log10(pf$friend_count+1))
qplot(x=friend_count,data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count+1))
qplot(x=friend_count,data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count+1))
summary(sqrt(pf$friend_count))
library(reshape2)
library(reshape2)
install.packages('reshape2')
library(reshape2)
head(tips)
library(ggplot2)
sp=ggplot(tips,aes(x=total_bill,y=tip/total_bill))geom_point(shape=1)
sp<-ggplot(tips,aes(x=total_bill,y=tip/total_bill))geom_point(shape=1)
sp=ggplot(tips,aes(x=total_bill,y=tip/total_bill))+geom_point(shape=1)
sp
sp+facet_grid(sex ~ .)
sp+facet_grid(sex ~ day)
sp+facet_wrap(~ day,ncol=2)
sp+facet_grid(sex ~ day)+theme(strip.text.x=element_text(size = 8),angle=75)+
sp+facet_grid(sex ~ day)+theme(strip.text.x=element_text(size = 8),angle=75),
sp + facet_grid(sex ~ day) +
theme(strip.text.x = element_text(size=8, angle=75),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
labels=c(Female="Women",Male="men")
labels <- c(Female = "Women", Male = "Men")
sp + facet_grid(. ~ sex, labeller=labeller(sex = labels))
tips2=tips
levels(tips2$sex)[levels(tips2$sex)=="Female"]="Women"
levels(tips2$sex)[levels(tips2$sex)=="male"]="Men"
head(tips2,3)
reverse=function(strings){}
reverse <- function(strings) {
strings <- strsplit(strings, "")
vapply(strings, function(x) {
paste(rev(x), collapse = "")
}, FUN.VALUE = character(1))
}
sp+facet_grid(. ~sex,labeller=labeller(sex=reverse())
sp+facet_grid(. ~sex,labeller=labeller(sex=reverse)
sp+facet_grid(. ~sex,labeller=labeller(sex=reverse))
hp=ggplot(tips,aes(x=total_bill)),geom_histogram(binwidth=2,colour="white")
hp=ggplot(tips,aes(x=total_bill))+geom_histogram(binwidth=2,colour="white")
hp+facet_grid(sex~smoker)
hp+facet_grid(sex~smoker,scales="free_y")
hp+facet_grid(sex~smoker,scales="free_y",space="free")
hp+facet_grid(sex~smoker,scales="free_y")
hp+facet_grid(sex~smoker,scales="free_y",space="free")
Problem
#Problem
#You want to do split up your data by one or more variables and plot #the subsets of data together.
library(reshape2)
head(tips)
library(ggplot2)
sp <- ggplot(tips, aes(x=total_bill,y=tip/total_bill))+geom_point(shape=1)
sp
# Divide by levels of "sex", in the horizontal direction
sp + facet_grid(. ~ sex)
# Divide with "sex" vertical, "day" horizontal
sp + facet_grid(sex ~ day)
# Divide by day, going horizontally and wrapping with 2 columns
sp + facet_wrap( ~ day, ncol=2)
sp + facet_grid(sex ~ day) +
theme(strip.text.x = element_text(size=8, angle=75),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
labels <- c(Female = "Women", Male = "Men")
sp + facet_grid(. ~ sex, labeller=labeller(sex = labels))
tips2 <- tips
levels(tips2$sex)[levels(tips2$sex)=="Female"] <- "Women"
levels(tips2$sex)[levels(tips2$sex)=="Male"]   <- "Men"
head(tips2, 3)
tips2 <- tips
levels(tips2$sex)[levels(tips2$sex)=="Female"] <- "Women"
levels(tips2$sex)[levels(tips2$sex)=="Male"]   <- "Men"
head(tips2, 3)
# Both of these will give the same output:
sp2 <- ggplot(tips2, aes(x=total_bill, y=tip/total_bill)) + geom_point(shape=1)
sp2 + facet_grid(. ~ sex)
# Reverse each strings in a character vector
reverse <- function(strings) {
strings <- strsplit(strings, "")
vapply(strings, function(x) {
paste(rev(x), collapse = "")
}, FUN.VALUE = character(1))
}
sp + facet_grid(. ~ sex, labeller=labeller(sex = reverse))
# A histogram of bill sizes
hp <- ggplot(tips, aes(x=total_bill)) + geom_histogram(binwidth=2,colour="white")
# Histogram of total_bill, divided by sex and smoker
hp + facet_grid(sex ~ smoker)
# Same as above, with scales="free_y"
hp + facet_grid(sex ~ smoker, scales="free_y")
# With panels that have the same scaling, but different range (and therefore different physical sizes)
hp + facet_grid(sex ~ smoker, scales="free", space="free")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
p1=ggplot(mpg.aes(displ,hwy))+geom_point()
install.packages("pkgdown")
pkgdown::build_site()
players=read.csv("nba-players.csv",stringsAsFactors = FALSE)
names(nba-players)
names(players)
warriors=subset(players,Team=="Warriors")
warriors.o=warriors[order(warriors$Ht_inches),]
par(mar=c(5,10,5,5))
barplot(warriors.o$Ht_inches,names.arg = warriors.o$Name,horiz = TRUE,border=NA,las=1,main="Heights of Golden State Warriors")
avgHeights=aggregate(Ht_inches ~ POS,data=players,mean)
avgHeights.o=avgHeights[order(avgHeights$Ht_inches,decreasing=FALSE),]barplot(avgHeights.o$Ht_inches,names.arg = avgHeights.o$POS,border=NA,las=1)
avgHeights.o <- avgHeights[order(avgHeights$Ht_inches, decreasing=FALSE),]
barplot(avgHeights.o$Ht_inches, names.arg=avgHeights.o$POS, border=NA, las=1)
avgHeights=aggregate(Ht_inches ~ POS,data=players,mean)
avgHeights.o=avgHeights[order(avgHeights$Ht_inches,decreasing=FALSE),]
barplot(avgHeights.o$Ht_inches,names.arg = avgHeights.o$POS,border=NA,las=1)
avgHeights=aggregate(Ht_inches ~ POS,data=players,mean)
avgHeights.o=avgHeights[order(avgHeights$Ht_inches,decreasing=FALSE),]
barplot(avgHeights.o$Ht_inches,names.arg = avgHeights.o$POS,border=NA,las=1)
knitr::opts_chunk$set(echo = TRUE)
# Load the data.
players <- read.csv("nba-players.csv", stringsAsFactors=FALSE)
# Load the data.
players <- read.csv("nba-players.csv", stringsAsFactors=FALSE)
names(players)
warriors <- subset(players, Team=="Warriors")
warriors.o <- warriors[order(warriors$Ht_inches),]
par(mar=c(5,10,5,5))
barplot(warriors.o$Ht_inches, names.arg=warriors.o$Name, horiz=TRUE, border=NA, las=1, main="Heights of Golden State Warriors")
avgHeights <- aggregate(Ht_inches ~ POS, data=players, mean)
avgHeights.o <- avgHeights[order(avgHeights$Ht_inches, decreasing=FALSE),]
barplot(avgHeights.o$Ht_inches, names.arg=avgHeights.o$POS, border=NA, las=1)
htrange=range(players$Ht_inches)
cnts=rep(0,20)
y=c()
for (i in 1:length(players[,1])) {
cntIndex=players$Ht_inches[i]-htrange[1]+1
cnts[cntIndex]=cnts[cntIndex]+1
y=c(y,cnts[cntIndex])
}
plot(players$Ht_inches,y,type="n",main="Player heights",xlab="inches",ylab="count")
points(players$Ht_inches,y,pch=21,col=NA,bg="#999999")
barplot(cnts,names.arg = 69:88,main ="Player heights",xlab = "inches",ylab = "count",border = NA,las=1)
#substitute the players with dots, one for each player.
htrange=range(players$Ht_inches)
cnts=rep(0,20)
y=c()
for (i in 1:length(players[,1])) {
cntIndex=players$Ht_inches[i]-htrange[1]+1
cnts[cntIndex]=cnts[cntIndex]+1
y=c(y,cnts[cntIndex])
}
plot(players$Ht_inches,y,type="n",main="Player heights",xlab="inches",ylab="count")
points(players$Ht_inches,y,pch=21,col=NA,bg="#999999")
#make some histograms
par(mfrow=c(1,3),mar=c(3,3,3,3,))
#make some histograms
par(mfrow=c(1,3),mar=c(3,3,3,3))
hist(players$Ht_inches,main="NBA Player Heights",xlab = "inches",breaks = seq(65,90,1))
hist(players$Ht_inches,main="NBA Player Heights",xlab = "inches",breaks = seq(65,90,2))
hist(players$Ht_inches,main="NBA Player Heights",xlab = "inches",breaks = seq(65,90,5))
par(mfrow=c(2,3),las=1,mar=c(5,5,4,1))
positions=unique(players$POS)
for (i in 1:length(positions)) {
currPlayers=subset(players,POS==positions[i])
hist(currPlayers$Ht_inches,main = positions
[i],breaks = 65:90,xlab = "inches",border = "#ffffff",col="#999999",lwd=0.4)
}
#adds a median line
par(mfrow=c(5,1), las=1, mar=c(5,5,4,1), xaxs="i", yaxs="i")
for (i in 1:length(avgHeights.o$POS)) {
currPlayers <- subset(players, POS==avgHeights.o$POS[i])
htMedian <- median(currPlayers$Ht_inches)
h <- hist(currPlayers$Ht_inches, main=avgHeights.o$POS[i], breaks=65:90, xlab="inches", border=NA, col="#999999", lwd=0.4)
maxFreq <- max(h$counts)
segments(h$breaks, rep(0, length(h$breaks)), h$breaks, maxFreq, col="white")
# Median line
lines(c(htMedian, htMedian), c(-1, maxFreq), col="purple", lwd=2)
}
#adds a median line
par(mfrow=c(2,3), las=1, mar=c(5,5,4,1), xaxs="i", yaxs="i")
for (i in 1:length(avgHeights.o$POS)) {
currPlayers <- subset(players, POS==avgHeights.o$POS[i])
htMedian <- median(currPlayers$Ht_inches)
h <- hist(currPlayers$Ht_inches, main=avgHeights.o$POS[i], breaks=65:90, xlab="inches", border=NA, col="#999999", lwd=0.4)
maxFreq <- max(h$counts)
segments(h$breaks, rep(0, length(h$breaks)), h$breaks, maxFreq, col="white")
# Median line
lines(c(htMedian, htMedian), c(-1, maxFreq), col="purple", lwd=2)
}
install.packages('gridExtra')
library(gridExtra)
library(gridExtra)
p1=qplot(x=friend_count,data=pf)
p2=qplot(x=log10(friend_count+1),data=pf)
p3=qplot(x=aqrt(friend_count),data=pf)
library(gridExtra)
p1=qplot(x=friend_count,data=pf)
p2=qplot(x=log10(friend_count+1),data=pf)
p3=qplot(x=sqrt(friend_count),data=pf)
grid.arrange(p1,p2,p3,ncol=1)
p1=ggplot(aes(x=friend_count),data=pf)+geom_histogram()
p2=p1+scale_x_log10()
p3=p1+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=1)
logScale=qplot(x=log10(friend_count+1),data=pf)
countScale=ggplot(aes(x=friend_count),data=pf)+geom_histogram()+scale_x_log10()
grid.arrange(logScale,countScale,ncol=2
logScale=qplot(x=log10(friend_count+1),data=pf)
countScale=ggplot(aes(x=friend_count),data=pf)+geom_histogram()+scale_x_log10()
grid.arrange(logScale,countScale,ncol=2)
logScale=qplot(x=log10(friend_count),data=pf)
countScale=ggplot(aes(x=friend_count),data=pf)+geom_histogram()+scale_x_log10()
grid.arrange(logScale,countScale,ncol=2)
logScale=qplot(x=log10(friend_count),data=pf)
countScale=ggplot(aes(x=friend_count),data=pf)+geom_histogram()+scale_x_log10()
grid.arrange(logScale,countScale,ncol=2)
qplot(x=friend_count,data=pf)+
scale_x_log10()
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))+facet_wrap(~gender
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))+facet_wrap(~gender)
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))+facet_wrap(~gender)
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10,geom='freqploy',color=gender)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))+facet_wrap(~gender)
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10,geom='freqpoly',color=gender)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))
qplot(x=friend_count,data=subset(pf,!is.na(gender)),binwidth=10)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))+facet_wrap(~gender)
qplot(x=friend_count,y=..count../sum(..count..),data=subset(pf,!is.na(gender)),binwidth=10,geom='freqpoly',color=gender)+
scale_x_continuous(lim=c(0,1000),breaks = seq(0,1000,50))
#alternative
ggplot(aes(x=friend_count),y=..count../sum(..count..)),data=subset(pf, !is.na(gender))+
#alternative
ggplot(aes(x = friend_count, y = ..count../sum(..count..)),
data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
ggplot(aes(x=www_likes),data=subset(pf,!is.na(gender)))+
geom_freqpoly(aes(color=gender))+
scale_x_log10()
names(pf)
ggplot(aes(x=www_likes),data=subset(pf,!is.na(gender)))+
geom_freqpoly(aes(color=gender))+
scale_x_log10()
qplot(x=www_likes,data=subset(pd,!is.na(gender)),geom='freqpoly)
qplot(x=www_likes),data=subset(pf,!is.na(gender)),geom='freqpoly)
qplot(x=www_likes),data=subset(pf,!is.na(gender)),geom='freqpoly')
qplot(x=www_likes),data=subset(pf,!is.na(gender)),geom='freqpoly')
qplot(x=www_likes,data = subset(pd,!is.na(gender)),geom = 'freqpoly')
qplot(x=www_likes,data = subset(pf,!is.na(gender)),geom = 'freqpoly')
qplot(x=www_likes,data = subset(pf,!is.na(gender)),geom = 'freqpoly',color=gender)
qplot(x=www_likes,data = subset(pf,!is.na(gender)),geom = 'freqpoly',color=gender)+
scale_x_continuous()
qplot(x=www_likes,data = subset(pf,!is.na(gender)),geom = 'freqpoly',color=gender)+
scale_x_continuous()+
scale_x_log10()
savehistory("~/0325.Rhistory")
